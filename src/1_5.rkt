#lang racket

(define (p) (p))

(define (test x y)
  (if (= x 0) 0 y))

(test 0 (p))

;; Аппликативный порядок вычислений - сначала вычислит значения всех её аргументов (бесконечный цикл).
;; Нормального порядка вычислений - аргументы функции не вычисляются до момента их непосредственного использования (предикат не учавствует).
;; В обоих случаях ничего не вычислится =)
